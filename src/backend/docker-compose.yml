services:
  db:
    image: postgres:15-alpine
    container_name: invoice_db
    restart: always
    environment:
      POSTGRES_DB: ocr_database
      POSTGRES_USER: ocr_user
      POSTGRES_PASSWORD: your_secure_password_here
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocr_user -d ocr_database"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:7-alpine
    container_name: invoice_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: invoice_api
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://ocr_user:your_secure_password_here@db:5432/ocr_database
      - POSTGRES_USER=ocr_user
      - POSTGRES_PASSWORD=your_secure_password_here
      - POSTGRES_DB=ocr_database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - shared_storage:/app/uploaded_documents_local
      - model_storage:/app/models/yolo_models
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build: .
    container_name: invoice_celery_worker
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://ocr_user:your_secure_password_here@db:5432/ocr_database
      - POSTGRES_USER=ocr_user
      - POSTGRES_PASSWORD=your_secure_password_here
      - POSTGRES_DB=ocr_database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - shared_storage:/app/uploaded_documents_local
      - model_storage:/app/models/yolo_models
    command: celery -A ocr_worker.celery_app worker --loglevel=info --concurrency=2 --include=ocr_worker.worker

  celery_flower:
    build: .
    container_name: invoice_celery_flower
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A ocr_worker.celery_app flower --port=5555

volumes:
  postgres_data:
  shared_storage:
  model_storage:
